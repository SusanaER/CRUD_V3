version: '3.4'

volumes:
  sales-datafiles:
  regularclient-datafiles:
  products-datafiles:

services:
  sales-database:
    image: mysql:8.0.22
    ports:
      - "3366:3306"
    volumes:
      - sales-datafiles:/var/lib/mysql
    restart: always
    environment: 
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: salesupermarket
  salessupermarket:
    image: ${DOCKER_REGISTRY-}salessupermarket
    build:
      context: .
      dockerfile: SalesSupermarket/Dockerfile
    depends_on: 
      - sales-database
    ports:
      - "5000:80"
      - "777:443"
    restart: always
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development

  regularclient-database:
    image: mysql:8.0.22
    ports:
      - "3367:3306"
    volumes:
      - regularclient-datafiles:/var/lib/mysql
    restart: always
    environment: 
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: regularclientsupermarket
  regularclientsupermarket:
    image: ${DOCKER_REGISTRY-}regularclientsupermarket
    build:
      context: .
      dockerfile: RegularClientSupermarket/Dockerfile
    depends_on: 
      - regularclient-database
    ports:
      - "8000:80"
      - "778:443"
    restart: always
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development

  products-database:
    image: mysql:8.0.22
    ports:
      - "3368:3306"
    volumes:
      - products-datafiles:/var/lib/mysql
    restart: always
    environment: 
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: productsupermarket
  productssupermarket:
    image: ${DOCKER_REGISTRY-}productssupermarket
    build:
      context: .
      dockerfile: ProductsSupermarket/Dockerfile
    depends_on: 
      - products-database
    ports:
      - "8001:80"
      - "779:443"
    restart: always
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development